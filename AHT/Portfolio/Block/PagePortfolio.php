<?php

namespace AHT\Portfolio\Block;

use Magento\Framework\Registry;
use Magento\Framework\View\Element\Template;
use AHT\Portfolio\Model\ResourceModel\ConfigPortfolio\CollectionFactory;
use AHT\Portfolio\Model\PortfolioFactory;
use AHT\Portfolio\Model\CategoryFactory;

class PagePortfolio extends Template
{
    protected $_configPortfolio;
    protected $_portfolioFactory;
    protected $_coreRegistry;
    protected $_categoryFactory;

    public function __construct(Template\Context $context, array $data = [], CollectionFactory $configPortfolio, PortfolioFactory $portfolioFactory, Registry $registry , CategoryFactory $categoryFactory)
    {
        $this->_categoryFactory = $categoryFactory;
        $this->_coreRegistry = $registry;
        $this->_portfolioFactory = $portfolioFactory;
        $this->_configPortfolio = $configPortfolio;
        parent::__construct($context, $data);
    }

    public function _prepareLayout()
    {
        $config = $this->getConfig();
        $id = $this->_coreRegistry->registry("category");
        if(isset($id))
        {
            $category = $this->_categoryFactory->create();
            $category->load($id);
            $name = $category->getName();
            $title = $name;
        }else{
            $title = $config[0]["title"];
        }


        $keywords = $config[0]["keywords"];
        $description = $config[0]["description"];
        $this->pageConfig->getTitle()->prepend(__($title));
        $this->pageConfig->setKeywords($keywords);
        $this->pageConfig->setDescription($description);
        return parent::_prepareLayout(); // TODO: Change the autogenerated stub
    }

    public function getConfig()
    {
        $config = $this->_configPortfolio->create();
        $dataConfig = $config->getData();
        return $dataConfig;

    }

    public function getSettingColumn()
    {
        $data = $this->getConfig();
        $row = $data[0]["count_row"];
        return $row;
    }

    public function getAllData()
    {
        $model = $this->_portfolioFactory->create();
        $data = $model->getCollection()->getData();
        return $data;
    }

    public function getIdCategory(){
        return $this->_coreRegistry->registry("category");
    }

    public function getDataFromCategory()
    {
        $id = $this->_coreRegistry->registry("category");

        $model = $this->_portfolioFactory->create();

        $data = $model->getCollection()->addFieldToFilter("category_id",["eq", $id])->getData();
        return $data;
    }

    public function getUrlMedia()
    {
        $mediaUrl = $this ->_storeManager-> getStore()->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA );
        return $mediaUrl;
    }

    public function urlBase()
    {
        return $this->_baseUrl;
    }


}